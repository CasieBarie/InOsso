name: Deploy Bot

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      deploy: true

  deploy:
    name: Deploy to Oracle
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.version_changed == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy via SSH
        id: deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.ORACLE_HOST }}
          username: ubuntu
          key: ${{ secrets.ORACLE_SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          envs: GHCR_TOKEN
          script_stop: false
          script: |
            DEPLOY_DIR="/home/ubuntu"
            GHCR_TOKEN_FILE="$DEPLOY_DIR/ghcr_token.txt"

            SSH_OK="‚ùå SSH Connection Failed"
            AUTH_OK="‚ùå Authentication Failed"
            TOKEN_OK="‚ùå Failed to Create GHCR Token"
            SCRIPT_OK="‚ùå Deployment Script Failed"
            CLEANUP_OK="‚ùå Cleanup Failed"

            if timeout 5 bash -c "</dev/tcp/127.0.0.1/22" 2>/dev/null; then
              SSH_OK="‚úÖ SSH Connection Established"
            fi

            if whoami &>/dev/null; then
              AUTH_OK="‚úÖ Authenticated with Private Key"
            fi

            if echo "$GHCR_TOKEN" > "$GHCR_TOKEN_FILE" && chmod 600 "$GHCR_TOKEN_FILE"; then
              TOKEN_OK="‚úÖ GHCR Token Created"
            fi

            if [[ "$SSH_OK" == "‚úÖ"* && "$AUTH_OK" == "‚úÖ"* ]]; then
              if cd "$DEPLOY_DIR" && ./update-bot.sh; then
                SCRIPT_OK="‚úÖ Deployment Script Executed (./update-bot.sh)"
              fi
            fi

            if [[ -f "$GHCR_TOKEN_FILE" ]]; then
              if shred -u "$GHCR_TOKEN_FILE"; then
                CLEANUP_OK="‚úÖ Token File Cleaned Up"
              fi
            else
              CLEANUP_OK="‚úÖ Nothing to Clean Up"
            fi

            if [[ "$SSH_OK" == "‚úÖ"* && "$AUTH_OK" == "‚úÖ"* && "$TOKEN_OK" == "‚úÖ"* && "$SCRIPT_OK" == "‚úÖ"* && "$CLEANUP_OK" == "‚úÖ"* ]]; then
              OVERALL_RESULT="‚úÖ Deployment Completed Successfully"
              DEPLOY_EXIT_CODE=0
            else
              OVERALL_RESULT="‚ùå Deployment Failed"
              DEPLOY_EXIT_CODE=1
            fi

            {
              echo "SSH_OK=$SSH_OK"
              echo "AUTH_OK=$AUTH_OK"
              echo "TOKEN_OK=$TOKEN_OK"
              echo "SCRIPT_OK=$SCRIPT_OK"
              echo "CLEANUP_OK=$CLEANUP_OK"
              echo "OVERALL_RESULT=$OVERALL_RESULT"
              echo "DEPLOY_EXIT_CODE=$DEPLOY_EXIT_CODE"
            } >> $GITHUB_ENV

      - name: Deployment Summary
        if: always()
        run: |
          echo "üöÄ Deployment Summary"
          echo "### Deployment"
          echo "- $SSH_OK"
          echo "- $AUTH_OK"
          echo "- $TOKEN_OK"
          echo "- $SCRIPT_OK"
          echo "- $CLEANUP_OK"
          echo ""
          echo "### Result"
          echo "- $OVERALL_RESULT"
          VERSION=$(grep -m1 '<version>' pom.xml | sed -E 's/.*<version>(.*)<\/version>.*/\1/')
          echo "- üè∑Ô∏è Bot Version: $VERSION"
          if [[ "$DEPLOY_EXIT_CODE" -ne 0 ]]; then
            echo "Deployment failed ‚Äî exiting with error"
            exit 1
          fi