name: Build
on:
  workflow_call:
    inputs:
      deploy:
        description: "Set to true to run Docker build & push"
        required: true
        type: boolean
    secrets:
      GHCR_TOKEN:
        description: "GitHub Container Registry token"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Compile
        id: compile
        continue-on-error: true
        run: |
          if mvn -B clean compile --file pom.xml; then
            echo "compile_status=success" >> $GITHUB_ENV
          else
            echo "compile_status=failed" >> $GITHUB_ENV
          fi

      - name: Package JAR
        id: package
        continue-on-error: true
        run: |
          if mvn -B package -DskipTests --file pom.xml; then
            echo "package_status=success" >> $GITHUB_ENV
          else
            echo "package_status=failed" >> $GITHUB_ENV
          fi

      - name: Check JAR exists
        id: jar
        continue-on-error: true
        run: |
          JAR_FILE=$(find target -name "*.jar" | head -n 1)
          if [ -z "$JAR_FILE" ]; then
            echo "jar_status=missing" >> $GITHUB_ENV
          else
            FILESIZE=$(stat -c%s "$JAR_FILE")
            if [ "$FILESIZE" -le 0 ]; then
              echo "jar_status=empty" >> $GITHUB_ENV
            else
              echo "jar_status=ok" >> $GITHUB_ENV
              echo "jar_file=$JAR_FILE" >> $GITHUB_ENV
              echo "jar_size=$FILESIZE" >> $GITHUB_ENV
            fi
          fi

      - name: Docker Build & Push
        if: ${{ inputs.deploy == true }}
        id: docker
        continue-on-error: true
        run: |
          set +e
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          if docker build -t ghcr.io/casiebarie/inosso-bot:latest .; then
            echo "docker_build_status=success" >> $GITHUB_ENV
          else
            echo "docker_build_status=failed" >> $GITHUB_ENV
          fi
          if docker push ghcr.io/casiebarie/inosso-bot:latest; then
            echo "docker_push_status=success" >> $GITHUB_ENV
          else
            echo "docker_push_status=failed" >> $GITHUB_ENV
          fi

      - name: Build Summary
        if: always()
        run: |
          echo "# 📦 Build Summary" >> $GITHUB_STEP_SUMMARY

          echo "### Maven Build" >> $GITHUB_STEP_SUMMARY
          [[ "$compile_status" == "success" ]] && echo "- ✅ Compilation: Success" >> $GITHUB_STEP_SUMMARY || echo "- ❌ Compilation: Failed" >> $GITHUB_STEP_SUMMARY
          [[ "$package_status" == "success" ]] && echo "- ✅ Package: Success" >> $GITHUB_STEP_SUMMARY || echo "- ❌ Package: Failed" >> $GITHUB_STEP_SUMMARY

          case "$jar_status" in
            ok) echo "- ✅ JAR Integrity: OK ($jar_size bytes)" >> $GITHUB_STEP_SUMMARY ;;
            empty) echo "- ❌ JAR Integrity: Empty JAR" >> $GITHUB_STEP_SUMMARY ;;
            missing) echo "- ❌ JAR Integrity: Missing JAR" >> $GITHUB_STEP_SUMMARY ;;
          esac

          if [[ "${{ inputs.deploy }}" == "true" ]]; then
            echo "### Docker" >> $GITHUB_STEP_SUMMARY
            [[ "$docker_build_status" == "success" ]] && echo "- ✅ Docker Build: Success" >> $GITHUB_STEP_SUMMARY || echo "- ❌ Docker Build: Failed" >> $GITHUB_STEP_SUMMARY
            [[ "$docker_push_status" == "success" ]] && echo "- ✅ Docker Push: Success" >> $GITHUB_STEP_SUMMARY || echo "- ❌ Docker Push: Failed" >> $GITHUB_STEP_SUMMARY
          fi